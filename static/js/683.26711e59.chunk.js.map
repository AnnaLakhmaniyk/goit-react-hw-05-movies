{"version":3,"file":"static/js/683.26711e59.chunk.js","mappings":"8LACA,EAAuB,yBAAvB,EAAuD,yB,SCG1CA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,eAAaJ,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMI,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMT,GAA1C,SACGM,KAFID,U,0ICRjB,EAA6B,oCAA7B,EAA0E,gCAA1E,EAAkH,+B,SCGrGK,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAYA,OACE,kBAAMH,SATa,SAAAI,GACnBA,EAAIC,iBACuB,KAAvBH,EAAYI,SAGhBN,EAASE,GACTC,EAAe,MAGeZ,UAAWC,EAAzC,WACE,kBACED,UAAWC,EACXe,KAAK,OACLC,KAAK,QACLC,MAAOP,EACPQ,SAlBe,SAAAN,GACnBD,EAAeC,EAAIO,OAAOF,WAmBxB,mBAAQF,KAAK,SAAShB,UAAWC,EAAjC,wBCzBN,EAAuB,0BCqCvB,EA/BoB,WAClB,OAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOW,EAAP,KAAoBC,EAApB,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAYH,EAAaI,IAAI,SAoBnC,OAdAC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,GAAeH,GACZI,MAAK,SAAAC,GACJV,EAAeU,GACK,IAAhBA,EAAKC,QACPC,EAAAA,GAAAA,MAAA,uBAGHC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACT,KAGF,kBAAM3B,UAAWC,EAAjB,WACE,SAACO,EAAD,CAAiBC,SApBA,SAAA8B,GACnBd,EAAS,CAAEe,OAAO,SAAD,OAAWD,QAoBzBlB,IAAe,SAACzB,EAAA,EAAD,CAAYC,OAAQwB,S,yMChCpCoB,EAAM,mCAENC,EAAiB,mCAAG,oGACLC,IAAAA,IAAA,kEAC0CF,IAFrC,cAClBT,EADkB,yBAIjBA,GAJiB,2CAAH,qDAOjBY,EAAgB,mCAAG,WAAMC,GAAN,uFACHF,IAAAA,IAAA,6CACoBE,EADpB,oBACwCJ,IAFrC,cACjBK,EADiB,yBAIhBA,EAAMd,MAJU,2CAAH,sDAMhBe,EAAW,mCAAG,WAAMF,GAAN,uFACCF,IAAAA,IAAA,6CACqBE,EADrB,4BACiDJ,IAFlD,cACZO,EADY,yBAIXA,EAAKhB,KAAKgB,MAJC,2CAAH,sDAMXC,EAAe,mCAAG,WAAMJ,GAAN,uFACAF,IAAAA,IAAA,6CACkBE,EADlB,4BAC8CJ,IAF9C,cAChBS,EADgB,yBAIfA,EAAQlB,KAAKmB,SAJE,2CAAH,sDAMfrB,EAAc,mCAAG,WAAMS,GAAN,uFACDI,IAAAA,IAAA,4DACmCF,EADnC,kBACgDF,EADhD,+CADC,cACfO,EADe,yBAIdA,EAAMd,KAAKmB,SAJG,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","webpack://goit-react-hw-05-movies/./src/components/FormMovieSearch/FormMovieSearch.module.css?dd77","components/FormMovieSearch/FormMovieSearch.js","webpack://goit-react-hw-05-movies/./src/pages/MovieSearch/MovieSearch.module.css?d7a7","pages/MovieSearch/MovieSearch.js","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={s.list}>\n      {movies.map(({ id, original_title }) => (\n        <li key={id} className={s.item}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"FormMovieSearch_searchForm__yDNUt\",\"button\":\"FormMovieSearch_button__f79Q4\",\"input\":\"FormMovieSearch_input__88CQJ\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FormMovieSearch.module.css';\n\nexport const FormMovieSearch = ({ onSubmit }) => {\n  const [movieSearch, setMovieSearch] = useState('');\n  const handleChange = evt => {\n    setMovieSearch(evt.target.value);\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (movieSearch.trim() === '') {\n      return;\n    }\n    onSubmit(movieSearch);\n    setMovieSearch('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={s.searchForm}>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"query\"\n        value={movieSearch}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className={s.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nFormMovieSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"MovieSearch_wrap__y8lJD\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieSearch } from 'services/moviesApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { FormMovieSearch } from 'components/FormMovieSearch/FormMovieSearch';\nimport s from './MovieSearch.module.css';\nconst MovieSearch = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const movieName = searchParams.get('query');\n\n  const handleSubmit = query => {\n    navigate({ search: `query=${query}` });\n  };\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    getMovieSearch(movieName)\n      .then(data => {\n        setSearchMovie(data);\n        if (data.length === 0) {\n          toast.error(`Sorry, not found`);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [movieName]);\n\n  return (\n    <main className={s.wrap}>\n      <FormMovieSearch onSubmit={handleSubmit} />\n      {searchMovie && <MoviesList movies={searchMovie} />}\n    </main>\n  );\n};\nexport default MovieSearch;\n","import axios from 'axios';\n\nconst KEY = '29f2b26971cec73ce1bc0467b59149a2';\n\nconst getTrendingMovies = async () => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`\n  );\n  return data;\n};\n\nconst getMoviePageInfo = async movie_id => {\n  const movie = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${KEY}`\n  );\n  return movie.data;\n};\nconst getCastInfo = async movie_id => {\n  const cast = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${KEY}`\n  );\n  return cast.data.cast;\n};\nconst getReviewsInifo = async movie_id => {\n  const reviews = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${KEY}`\n  );\n  return reviews.data.results;\n};\nconst getMovieSearch = async query => {\n  const movie = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return movie.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMoviePageInfo,\n  getCastInfo,\n  getReviewsInifo,\n  getMovieSearch,\n};\n"],"names":["MoviesList","movies","location","useLocation","className","s","map","id","original_title","to","state","from","FormMovieSearch","onSubmit","useState","movieSearch","setMovieSearch","evt","preventDefault","trim","type","name","value","onChange","target","searchMovie","setSearchMovie","useSearchParams","searchParams","navigate","useNavigate","movieName","get","useEffect","getMovieSearch","then","data","length","toast","catch","error","console","log","query","search","KEY","getTrendingMovies","axios","getMoviePageInfo","movie_id","movie","getCastInfo","cast","getReviewsInifo","reviews","results"],"sourceRoot":""}