{"version":3,"file":"static/js/635.79050121.chunk.js","mappings":"wOACA,GAAgB,KAAO,4BAA4B,KAAO,4BAA4B,QAAU,+BAA+B,KAAO,4BAA4B,IAAM,4B,SCgExK,EA5DsB,WAAO,IAAD,UACpBA,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAmB,OAARP,QAAQ,IAARA,GAAA,UAAAA,EAAUQ,aAAV,eAAiBC,OAAQ,IAO1C,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBT,GACdU,MAAK,SAAAC,GAAI,OAAIP,EAASO,MACtBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACb,KAGF,iCACE,SAAC,KAAD,CAAMgB,GAAIX,EAAV,UACE,mBAAQY,UAAWC,EAAAA,IAAOC,KAAK,SAA/B,uBAKDhB,IACC,iBAAKc,UAAWC,EAAAA,KAAhB,WACE,gBACEE,IAAG,yCAAoCjB,EAAMkB,aAC7CC,IAAKnB,EAAMoB,eACXC,MAAM,WAER,iBAAKP,UAAWC,EAAAA,KAAhB,WACE,0BACGf,EAAMoB,eADT,IAC0BpB,EAAMsB,aAAaC,MAAM,EAAG,OAEtD,wCAAqC,GAArBvB,EAAMwB,aAAtB,QACA,sCACA,uBAAIxB,EAAMyB,YACV,oCACA,uBAAIzB,EAAM0B,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAAMC,KAAK,eAInD,iBAAKhB,UAAWC,EAAAA,QAAhB,WACE,iBAAKD,UAAWC,EAAAA,KAAhB,WACE,oDACA,gBAAID,UAAWC,EAAAA,KAAf,WACE,yBACE,SAAC,KAAD,CAAMF,GAAG,OAAOV,MAAO,CAAEC,KAAI,iBAAET,QAAF,IAAEA,GAAF,UAAEA,EAAUQ,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAxD,qBAIF,yBACE,SAAC,KAAD,CAAMS,GAAG,UAAUV,MAAO,CAAEC,KAAI,iBAAET,QAAF,IAAEA,GAAF,UAAEA,EAAUQ,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAA3D,8BAMN,SAAC,KAAD,Y,yMCzDF2B,EAAM,mCAENC,EAAiB,mCAAG,oGACLC,IAAAA,IAAA,kEAC0CF,IAFrC,cAClBvB,EADkB,yBAIjBA,GAJiB,2CAAH,qDAOjBF,EAAgB,mCAAG,WAAM4B,GAAN,uFACHD,IAAAA,IAAA,6CACoBC,EADpB,oBACwCH,IAFrC,cACjB/B,EADiB,yBAIhBA,EAAMQ,MAJU,2CAAH,sDAMhB2B,EAAW,mCAAG,WAAMD,GAAN,uFACCD,IAAAA,IAAA,6CACqBC,EADrB,4BACiDH,IAFlD,cACZK,EADY,yBAIXA,EAAK5B,KAAK4B,MAJC,2CAAH,sDAMXC,EAAe,mCAAG,WAAMH,GAAN,uFACAD,IAAAA,IAAA,6CACkBC,EADlB,4BAC8CH,IAF9C,cAChBO,EADgB,yBAIfA,EAAQ9B,KAAK+B,SAJE,2CAAH,sDAMfC,EAAc,mCAAG,WAAMC,GAAN,uFACDR,IAAAA,IAAA,4DACmCF,EADnC,kBACgDU,EADhD,+CADC,cACfzC,EADe,yBAIdA,EAAMQ,KAAK+B,SAJG,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/pages/MoviePageInfo/MoviePageInfo.module.css?e45c","pages/MoviePageInfo/MoviePageInfo.js","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"MoviePageInfo_wrap__XOdVL\",\"info\":\"MoviePageInfo_info__MhOTA\",\"dopInfo\":\"MoviePageInfo_dopInfo__3RkFL\",\"link\":\"MoviePageInfo_link__3SUfJ\",\"btn\":\"MoviePageInfo_btn__8k0lB\"};","import { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviePageInfo } from 'services/moviesApi';\nimport s from './MoviePageInfo.module.css';\n\nconst MoviePageInfo = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const backHome = location?.state?.from || '/';\n  useEffect(() => {\n    getMoviePageInfo(movieId)\n      .then(data => setMovie(data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backHome}>\n        <button className={s.btn} type=\"button\">\n          GO back\n        </button>\n      </Link>\n\n      {movie && (\n        <div className={s.wrap}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.original_title}\n            width=\"350px\"\n          />\n          <div className={s.info}>\n            <h1>\n              {movie.original_title} {movie.release_date.slice(0, 4)}\n            </h1>\n            <p>User score: {movie.vote_average * 10}%</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <p>{movie.genres.map(item => item.name).join(', ')}</p>\n          </div>\n        </div>\n      )}\n      <div className={s.dopInfo}>\n        <div className={s.link}>\n          <h2>Additional information</h2>\n          <ul className={s.list}>\n            <li>\n              <Link to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: location?.state?.from ?? '/' }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MoviePageInfo;\n","import axios from 'axios';\n\nconst KEY = '29f2b26971cec73ce1bc0467b59149a2';\n\nconst getTrendingMovies = async () => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`\n  );\n  return data;\n};\n\nconst getMoviePageInfo = async movie_id => {\n  const movie = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${KEY}`\n  );\n  return movie.data;\n};\nconst getCastInfo = async movie_id => {\n  const cast = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${KEY}`\n  );\n  return cast.data.cast;\n};\nconst getReviewsInifo = async movie_id => {\n  const reviews = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${KEY}`\n  );\n  return reviews.data.results;\n};\nconst getMovieSearch = async query => {\n  const movie = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return movie.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMoviePageInfo,\n  getCastInfo,\n  getReviewsInifo,\n  getMovieSearch,\n};\n"],"names":["location","useLocation","movieId","useParams","useState","movie","setMovie","backHome","state","from","useEffect","getMoviePageInfo","then","data","catch","error","console","log","to","className","s","type","src","poster_path","alt","original_title","width","release_date","slice","vote_average","overview","genres","map","item","name","join","KEY","getTrendingMovies","axios","movie_id","getCastInfo","cast","getReviewsInifo","reviews","results","getMovieSearch","query"],"sourceRoot":""}